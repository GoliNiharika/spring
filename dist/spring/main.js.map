{"version":3,"sources":["fs (ignored)","crypto (ignored)","stream (ignored)","./src/app/table/table.component.ts","./src/app/table/table.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/niharika/niharika.component.ts","./src/app/niharika/niharika.component.html","./src/app/app.module.ts","./src/app/student.service.ts","./src/app/student-list/student-list.component.ts","./src/app/student-list/student-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { StudentService } from '../student.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  //@Output() studentEnrolled = new EventEmitter();\n  form1 = new FormControl();\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ])\n  name = ''\n  rollNumber = ''\n  emailId = ''\n  password = ''\n\n  student: any\n  isUpdate=false\n  constructor(public router:Router, public studentService: StudentService) {\n    const studentData=this.router.getCurrentNavigation().extras.state\n     if(studentData)\n     {\n      this.name=studentData.name\n      this.rollNumber=studentData.roll\n      this.emailId=studentData.email\n      this.password=studentData.password\n      this.isUpdate=true\n     }\n  }\n\n\n  onSubmitForm(){\n    this.student = {\n      roll: this.rollNumber,\n      name: this.name,\n      email: this.emailId,\n      password: this.password\n    }\n    //this.studentService.studentList.push(this.student)\n\n    if(this.isUpdate)\n    {\n      this.studentService.updateStudent(this.student).subscribe((result)=>{\n        console.log(result)\n        this.studentService.refresh.next(true)\n      });\n    }\n    else\n    {\n      this.studentService.addStudent(this.student).subscribe((result)=>{\n        console.log(result)\n        this.studentService.refresh.next(true)\n      });\n    }\n\n\n    //this.studentEnrolled.emit(this.students)\n    //localStorage.setItem(\"studentListJson\",JSON.stringify(this.students))\n    //this.router.navigate([\"/studentList\"],{state:this.students});\n\n  }\n\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"container\">\n    <form >\n      <div class=\"text-center padding\"><h2>Student Form</h2></div>\n      <div class=\"form-group row\">\n          <div class=\"form-row\">\n               <div class=\"form-group col-md-6\">\n                   <label for=\"inputName\" class=\"form-label col-lg-12\">Student Name</label>\n                   <input type=\"text\" class=\"form-control col-lg-12\" id=\"inputName\" placeholder=\"Enter Name\" [(ngModel)]=\"name\" name=\"inputName\" autocomplete>\n               </div>\n               <div class=\"form-group col-md-6\">\n                   <label for=\"inputRoll\" class=\"form-label col-lg-12\">Roll Number</label>\n                   <input type=\"text\" class=\"form-control col-lg-12\" id=\"inputRoll\" [disabled]='isUpdate' placeholder=\"Roll Number\" [(ngModel)]=\"rollNumber\" name=\"inputRoll\">\n               </div>\n               <div class=\"form-group col-md-6\">\n                <label for=\"email\" class=\"form-label col-lg-12\">Email  Id</label>\n                <input type=\"email\" class=\"form-control col-lg-12\" id=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"emailId\" name=\"inputEmail\">\n               </div>\n               <div class=\"form-group col-md-6\">\n                   <label for=\"password\" class=\"form-label col-lg-12\">password</label>\n                   <input type=\"password\" class=\"form-control col-lg-12\" id=\"password\" placeholder=\"password\" [(ngModel)]=\"password\" name=\"inputPassword\">\n               </div>\n               <div class=\"form-group col-lg-12\">\n                   <label for=\"comment\">Comment:</label>\n                   <textarea class=\"form-control col-lg-12\" rows=\"5\" id=\"comment\"></textarea>\n               </div>\n\n            <div class=\"form-group col-lg-6\">\n               <button type=\"submit\" *ngIf=\"!isUpdate\" class=\" btn btn-primary padding-top\" (click)=\"onSubmitForm()\">Submit</button>\n               <button type=\"submit\" *ngIf=\"isUpdate\" class=\" btn btn-primary padding-top\" (click)=\"onSubmitForm()\">Update</button>\n\n               <button type=\"submit\" class=\" btn btn-danger padding-top\">cancel</button>\n            </div>\n</div>\n<!--\n<table>\n <tr *ngFor = \"let st of students\">\n <td>{{st.name}}</td>\n <td>{{st.rollNumber}}</td>\n <td>{{st.emailId}}</td>\n</tr>\n</table> -->\n\n<!-- <p>{{enteredName}}</p>\n<p>{{ enteredRoll }}</p>\n<p>{{enteredEmail}}</p> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  ApiUrl: \"https://springbackend6g.herokuapp.com\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'spring';\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n  <a href=\"#\" class=\"navbar-brand\">MySchool</a>\n  <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#menu\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"menu\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\"><a routerLink=\"studentList\" class=\"nav-link\"> Students</a></li>\n      <li class=\"nav-item\"><a routerLink=\" \" class=\"nav-link\"> Form</a></li>\n    </ul>\n  </div>\n</nav>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { StudentService } from '../student.service';\n\n\n\n@Component({\n  selector: 'app-niharika',\n  templateUrl: './niharika.component.html',\n  styleUrls: ['./niharika.component.css']\n})\nexport class NiharikaComponent implements OnInit {\n  form1 = new FormControl();\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ])\n  name='';\n  roll='';\n  data={name:'',roll:''}\n  result=[]\n  constructor(private studentService: StudentService) { }\n\n\n  onSubmit(){\n    this.data.name=this.name\n    this.data.roll=this.roll\n    console.log(this.data)\n    this.studentService.addStudent(this.data).subscribe((result)=>{\n      console.log(result)\n      this.studentService.refresh.next(true)\n    });\n  }\n\n  onDelete(){\n    this.data.roll = this.roll\n    this.studentService.deleteStudent(this.data.roll).subscribe((result)=>{\n      this.studentService.refresh.next(true);\n    })\n  }\n\n  onUpdate(){\n    this.data.name = this.name;\n    this.data.roll = this.roll;\n    this.studentService.updateStudent(this.data).subscribe((result) =>{\n      this.studentService.refresh.next(true);\n    })\n  }\n\n  ngOnInit(): void {\n\n    this.studentService.refresh.subscribe(\n      data=>{\n        if(data)\n        {\n          this.studentService.getStudent().subscribe(\n            (result:any)=>{\n              this.result=result\n            }\n          )\n        }\n      }\n    )\n    // this.form1 = {st\n    //   name : FormData();\n    //   roll : FormData();\n    // }\n  }\n\n}\n","<div>\n  <div>\n    <input type=\"text\" placeholder=\"enter name\" [(ngModel)] = \"name\"><br>\n    <input type=\"text\" placeholder=\"Roll Number\" [(ngModel)] = \"roll\"><br>\n    <button name=\"Submit\" (click)=\"onSubmit()\">Submit</button>\n    <button name=\"Submit\" (click)=\"onDelete()\">Delete</button>\n    <button name=\"Submit\" (click)=\"onUpdate()\">Update</button>\n  </div>\n  <div *ngFor='let student of result'>\n    <h2>Name:{{student.name}}</h2>\n    <h2>roll :{{student.roll}}</h2>\n  </div>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NiharikaComponent } from './niharika/niharika.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//import {MatFormField} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n//import {MatInputModule} from '@angular/material/input';\nimport {StudentService} from './student.service'\nimport { HttpClientModule } from '@angular/common/http';\nimport { TableComponent } from './table/table.component';\nimport { StudentListComponent } from './student-list/student-list.component';\n//import { ExcelService } from './services/excel.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NiharikaComponent,\n    TableComponent,\n    StudentListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n     FormsModule,\n    ReactiveFormsModule,\n\n  ],\n  providers: [StudentService],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  refresh = new BehaviorSubject<boolean>(true);\n  constructor( private http: HttpClient) { }\n\n  studentList = []\n\n  addStudent(payload)\n  {\n    return this.http.post(environment.ApiUrl+'/addStudent',payload)\n  }\n\n  getStudent(){\n    return this.http.get(environment.ApiUrl+'/getStudent');\n  }\n\n  deleteStudent(roll){\n  return this.http.delete(environment.ApiUrl+'/deleteStudent',{params:{roll}});\n  }\n\n  updateStudent(payload){\n    return this.http.post(environment.ApiUrl+'/updateStudent',payload);\n  }\n}\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { StudentService } from '../student.service';\nimport * as xlsx from 'xlsx';\n//https://levelup.gitconnected.com/export-data-to-excel-sheet-in-angular-8-7a8e0342643d   reference\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  result = []\n    //studentList = JSON.parse(localStorage.getItem(\"studentListJson\"))\n  constructor(public router : Router, public studentService:StudentService) {\n    //this.studentList=this.router.getCurrentNavigation().extras.state\n   }\n   @ViewChild('epltable', { static: false }) epltable: ElementRef;\n\n   export() {\n    const ws: xlsx.WorkSheet =\n    xlsx.utils.table_to_sheet(this.epltable.nativeElement);\n    const wb: xlsx.WorkBook = xlsx.utils.book_new();\n    xlsx.utils.book_append_sheet(wb, ws, 'Sheet1');\n    xlsx.writeFile(wb, 'epltable.xlsx');\n   }\n\n   addStudent(){\n    this.router.navigate([' '])\n   }\n\n   onEdit(student){\n\n    this.router.navigate([\" \"],{state:student});\n    // this.data.name = this.name;\n    // this.data.roll = this.roll;\n    // this.studentService.updateStudent(this.data).subscribe((result) =>{\n    //   this.studentService.refresh.next(true);\n    // })\n  }\n\n   onDelete(student){\n    console.log(student.roll)\n    this.studentService.deleteStudent(student.roll).subscribe((result)=>{\n      this.studentService.refresh.next(true);\n    })\n   }\n  ngOnInit(): void {\n    this.studentService.refresh.subscribe(\n      data=>{\n        if(data)\n        {\n          this.studentService.getStudent().subscribe(\n            (result:any)=>{\n              this.result=result\n            }\n          )\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card\" style=\"top: 50px;\">\n    <div style=\"padding-bottom: 10px;padding-top: 10px;\">\n      <div class=\"row\">\n       <div class=\"col-sm-4\">\n        <button (click)=\"export()\" class=\"btn btn-success\"><i class=\"fas fa-file-download\"></i>Export To Excel</button>\n       </div>\n       <div class=\"col-sm-4\" #add>\n        <button class=\"btn btn-success\" (click)=\"addStudent()\" ><i class=\"fas fa-plus\"></i>Add Student</button>\n       </div>\n      </div>\n     </div>\n    <table class=\"table table-striped\" #epltable >\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">S.No</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Roll Number</th>\n          <th scope=\"col\">Email Id</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of result; let indexOfelement=index\">\n          <th scope=\"row\">{{indexOfelement+1}}</th>\n          <td>{{student.name}}</td>\n          <td>{{student.roll}}</td>\n          <td>{{student.email}}</td>\n          <td><i (click)=\"onEdit(student)\" class=\"fas fa-pen\"></i>\n              <i (click)=\"onDelete(student)\" class=\"fas fa-trash\"></i>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TableComponent } from './table/table.component';\nimport { StudentListComponent } from './student-list/student-list.component';\n\n\nconst routes: Routes = [\n  {  path : ' ', component: TableComponent},\n  {  path : 'studentList', component: StudentListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}